#
# HT32F523xx (M0+) target script — 改进版（更健壮）
#

source [find target/swj-dp.tcl]
source [find mem_helper.tcl]

if { [info exists CHIPNAME] } {
   set _CHIPNAME $CHIPNAME
} else {
   set _CHIPNAME ht32f523xx
}

set _ENDIAN little

# Work-area is a space in RAM used for flash programming
# 默认使用 4KB 工作区（比原先 2KB 更稳健），可由外部变量覆盖
if { [info exists WORKAREASIZE] } {
   set _WORKAREASIZE $WORKAREASIZE
} else {
   set _WORKAREASIZE 0x1000
}

# JTAG/SWD speed: should be <= F_CPU/6 after reset (F_CPU ~= 2MHz => <=333kHz)
adapter speed 300
adapter srst delay 100

if { [info exists CPUTAPID] } {
    set _CPUTAPID $CPUTAPID
} else {
    # Arm M0+ ID
    set _CPUTAPID 0x0bc11477
}

# 更健壮的 DAP 配置：加上 IR 长度 / capture / mask 参数，提高兼容性
swj_newdap $_CHIPNAME cpu -irlen 4 -ircapture 0x1 -irmask 0xf -expected-id $_CPUTAPID
dap create $_CHIPNAME.dap -chain-position $_CHIPNAME.cpu

set _TARGETNAME $_CHIPNAME.cpu
target create $_TARGETNAME cortex_m -endian $_ENDIAN -dap $_CHIPNAME.dap

# Work area (SRAM) 设置：默认 0x20000000，大小由上面变量控制
$_TARGETNAME configure -work-area-phys 0x20000000 -work-area-size $_WORKAREASIZE -work-area-backup 0

# --------------------------------------------------------------------------
# Auto-detect flash size (HT32F52342 = 64KB, HT32F52352 = 128KB)
# --------------------------------------------------------------------------
# 默认 128KB
set _FLASHSIZE 0x20000


# --------------------------------------------------------------------------
# Flash bank definition
# --------------------------------------------------------------------------
set _FLASHNAME $_CHIPNAME.flash
# 使用你已有的 ht32f523xx 驱动名（保持和源码中注册的驱动名一致）
flash bank $_FLASHNAME ht32f523xx 0 $_FLASHSIZE 0 0 $_TARGETNAME

# ---------- 在 reset-init 阶段做 CHIPID 读取 (更安全) ----------
# reset-init 在 target 建立并已可用时触发，适合做一次 probe/读寄存器操作
$_TARGETNAME configure -event reset-init {
    echo "HT32F523xx: running reset-init probe..."

    # 尝试 halt（若已 halt 则无害），并在失败时记录但不崩溃
    if {[catch { halt } _err_halt]} {
        echo "Warning: halt failed in reset-init: $_err_halt"
    }

    # 读 CHIPID（用 catch 包裹以避免脚本崩溃）
    if {[catch { set _CHIPID [mrw 0x40048000] } _err_chipid]} {
        echo "Warning: Failed to read CHIP ID at 0x40048000: $_err_chipid"
        set _CHIPID 0
    } else {
        echo "HT32F523xx: CHIPID = 0x[format %08X $_CHIPID]"
    }

    # 仅做打印/检测，不去修改已注册的 flash bank（避免不一致）
    if { $_CHIPID != 0 } {
        if { ($_CHIPID == 0x52342) || ($_CHIPID == 0x52341) } {
            echo "Detected variant: HT32F52342/41 (likely 64KB flash)"
        } else {
            echo "Detected variant: HT32F52352/51 or unknown (assume 128KB)"
        }
    } else {
        echo "CHIPID unknown; using default flash bank settings"
    }
}


# Reset config: 保留 srst_nogate（你的板子如无外部 SRST gate 可用），并使用 SYSRESETREQ 作为 fallback
reset_config srst_nogate

if {![using_hla]} {
   cortex_m reset_config sysresetreq
}

# 保证 reset-start 时 adapter speed 恢复为 300
$_TARGETNAME configure -event reset-start {
    adapter speed 300
}
